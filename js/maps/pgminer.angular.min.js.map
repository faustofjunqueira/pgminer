{"version":3,"sources":["pgminer.angular.min.js","js/config/config.js","js/ctrl/docController.js","js/directive/documentation.js","js/service/parametroFactory.js","js/service/retornoFactory.js"],"names":["angular","module","app","controller","$scope","parametroFactory","retornoFactory","listaFuncoes","nome","descricao","cabecalho","parametros","criar","retorno","directive","templateUrl","restrict","scope","listaFuncao","$element","$attrs","this","teste","alert","link","$attr","ctrl","escolhida","escolherFuncao","funcao","service","tipo"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,ACLAA,QAAAC,OAAA,cAEA,aAEAD,QAAAC,OAAA,YCJA,SAAAC,KAEAA,IAAAC,WAAA,iBAAA,SAAA,mBAAA,iBAAA,SAAAC,OAAAC,iBAAAC,gBACAF,OAAAG,eAEAC,KAAA,wBACAC,UAAA,0HACAC,UAAA,kEACAC,YACAN,iBAAAO,MAAA,IAAA,SAAA,sBAEAC,SACAP,eAAAM,MAAA,IAAA,SAAA,6CAIAJ,KAAA,gBACAC,UAAA,wGACAC,UAAA,0DACAC,YACAN,iBAAAO,MAAA,IAAA,SAAA,sBAEAC,SACAP,eAAAM,MAAA,IAAA,SAAA,yDAMAZ,QAAAC,OAAA,YC7BA,SAAAC,KAEAA,IAAAY,UAAA,kBAAA,WACA,OACAC,YAAA,qCACAC,SAAA,KACAC,OACAC,YAAA,UAEAf,YAAA,SAAA,WAAA,SAAA,SAAAC,OAAAe,SAAAC,QACAC,KAAAC,MAAA,WACAC,MAAAnB,OAAAc,gBAGAM,KAAA,SAAApB,OAAAe,SAAAM,MAAAC,MACAtB,OAAAuB,UAAAvB,OAAAc,YAAA,GACAd,OAAAwB,eAAA,SAAAC,QACAzB,OAAAuB,UAAAE,YAOA3B,IAAAY,UAAA,YAAA,WACA,OACAG,OACAY,OAAA,KAEAb,SAAA,KACAD,YAAA,mCAMAf,QAAAC,OAAA,YCpCA,SAAAC,KAEAA,IAAA4B,QAAA,mBAAA,WAEAT,KAAAT,MAAA,SAAAJ,KAAAuB,KAAAtB,WACA,OACAD,KAAAA,KACAuB,KAAAA,KACAtB,UAAAA,eAMAT,QAAAC,OAAA,YCdA,SAAAC,KAEAA,IAAA4B,QAAA,iBAAA,WAEAT,KAAAT,MAAA,SAAAJ,KAAAuB,KAAAtB,WACA,OACAD,KAAAA,KACAuB,KAAAA,KACAtB,UAAAA,eAMAT,QAAAC,OAAA","file":"../pgminer.angular.min.js","sourcesContent":[null,"angular.module('pgminer',[]);\n\n(function(){\n\n})(angular.module('pgminer'));","(function(app){\n\n  app.controller('DocController', function($scope,parametroFactory, retornoFactory){\n    $scope.listaFuncoes = [\n      {\n        nome: 'apply_inverse_sigmoid',\n        descricao:'Aplica a função inversa da sigmoid sobre cada elemento x 1da matriz m. Inversa da sigmoid: -log( 2.0/(x+1.0) -1.0)/16.0',\n        cabecalho:'apply_inverse_sigmoid(in m matrix, out c matrix) RETURNS matrix',\n        parametros: [\n          parametroFactory.criar('m', 'matrix', 'Matriz de valores')\n        ],\n        retorno:[\n          retornoFactory.criar('c', 'matrix', 'Matriz com valores aplicados na função')\n        ]\n      },\n      {\n        nome: 'apply_sigmoid',\n        descricao:'Aplica a função sigmoid sobre cada elemento x da matriz m. Sigmoid: 2.0/(1.0 + exp( -16.0*x ) ) - 1.0',\n        cabecalho:'apply_sigmoid(in m matrix, out c matrix) RETURNS matrix',\n        parametros: [\n          parametroFactory.criar('m', 'matrix', 'Matriz de valores')\n        ],\n        retorno:[\n          retornoFactory.criar('c', 'matrix', 'Matriz com valores aplicados na função sigmoid')\n        ]\n      }\n    ];\n  });\n\n})(angular.module('pgminer'));","(function(app){\n\napp.directive('pgmDocumentacao', function(){\n  return {\n    templateUrl: '/src/template/pgmdocumentacao.html',\n    restrict: 'EA',\n    scope: {\n      listaFuncao: '=lista'\n    },\n    controller: function($scope, $element, $attrs){\n      this.teste = function(){\n        alert($scope.listaFuncao);\n      };\n    },\n    link: function($scope,$element,$attr, ctrl){\n      $scope.escolhida = $scope.listaFuncao[0];\n      $scope.escolherFuncao = function(funcao){\n        $scope.escolhida = funcao;\n      };\n    }\n  };\n\n});\n\napp.directive('pgmFuncao', function(){\n  return {\n    scope: {\n      funcao: '='\n    },\n    restrict: 'EA',\n    templateUrl: '/src/template/pgmfuncao.html'\n  };\n});\n\n\n\n})(angular.module('pgminer'));","(function(app){\n\napp.service('parametroFactory', function(){\n  \n  this.criar = function(nome, tipo, descricao){\n    return {\n      nome: nome,\n      tipo: tipo,\n      descricao: descricao\n    }\n  };\n\n});\n\n})(angular.module('pgminer'));","(function(app){\n\napp.service('retornoFactory', function(){\n  \n  this.criar = function(nome, tipo, descricao){\n    return {\n      nome: nome,\n      tipo: tipo,\n      descricao: descricao\n    }\n  };\n\n});\n\n})(angular.module('pgminer'));"]}